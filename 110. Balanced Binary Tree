/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool res = true;
    int test(TreeNode* root, int depth)
    {
        if (!root)
        {
            return depth;
        }
        ++depth;

        int l = test(root->left, depth);        
        int r = test(root->right, depth);
        if (std::abs(l - r) > 1)
        {
            res = false;            
        }
        return std::max(l, r);
    }
public:
    bool isBalanced(TreeNode* root) {
        if (!root) return true;
        int depth = 0;        
        test(root, depth);
        return res;        
    }
};
