/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        std::unordered_set<int> st;
        for (auto& item : nums)
        {
            st.emplace(item);
        }
        ListNode* res = nullptr, * add = nullptr, *next = nullptr;
        while(head)
        {
            next = head->next;
            if (st.find(head->val) == st.end())
            {
                if (add == nullptr)
                {
                    res = head;    
                    add = head;               
                }
                else
                {
                    add->next = head;                                       
                    add = add->next;
                }
                add->next = nullptr;
            }
            head = next;
        }       
        return res;
    }   
};
