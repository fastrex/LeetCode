/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> nodes;
        stack<TreeNode*> stk;
        TreeNode* last = NULL;
        
        while (!stk.empty() || root)
        {
            if (root)
            {
                stk.push(root);
                root = root->left;
            }
            else
            {
                root = stk.top();
                if (root->right && root->right != last)
                {
                    stk.push(root->right);
                    root = root->right->left;
                }
                else
                {
                    nodes.push_back(root->val);
                    last = root;
                    stk.pop();
                    root = nullptr;
                }
            }
        }
        return nodes;
    }
};
